/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Model.People;
import Model.Symptom;
import Process.ListPeopleCrud;
import Process.ListSymptonsCrud;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author LucasCorrea
 */
public class NewSymptom extends javax.swing.JFrame {

     private List<Symptom> symptons = new ArrayList();
     private ListSymptonsCrud listSymptons = new ListSymptonsCrud("Symptons");
    
    /**
     * Creates new form NewSymptom
     */
    public NewSymptom(ListSymptonsCrud listSymptonsCrud) {
        initComponents();
        this.listSymptons = listSymptonsCrud;
        listar(0, false);
        this.setLocationRelativeTo(null);
        jButtonRemoveDiagnosis.setEnabled(false);
        
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNameSymptom = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSymptom = new javax.swing.JList();
        jComboBoxDiagnosis = new javax.swing.JComboBox();
        jButtonInsertDiagnosis = new javax.swing.JButton();
        jButtonRemoveDiagnosis = new javax.swing.JButton();
        jButtonNewDiagnosis = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Symptom");

        jLabel2.setText("Name: ");

        jListSymptom.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListSymptom.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListSymptomValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListSymptom);

        jComboBoxDiagnosis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jButtonInsertDiagnosis.setText("Add Symptom");
        jButtonInsertDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertDiagnosisActionPerformed(evt);
            }
        });

        jButtonRemoveDiagnosis.setText("Remove Symptom");
        jButtonRemoveDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveDiagnosisActionPerformed(evt);
            }
        });

        jButtonNewDiagnosis.setText("New Diagnosis");

        jButton1.setText("Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Dispose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonInsertDiagnosis)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonNewDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jComboBoxDiagnosis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonRemoveDiagnosis)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNameSymptom, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(154, 154, 154)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNameSymptom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsertDiagnosis)
                    .addComponent(jButtonNewDiagnosis))
                .addGap(17, 17, 17)
                .addComponent(jComboBoxDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRemoveDiagnosis)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     public void listar(int cod, boolean isPesquisa) {
        DefaultListModel modelList = new DefaultListModel();

        if (isPesquisa) {
            Symptom symptons = listSymptons.consultBtCode(cod);
            if (symptons == null) {
                JOptionPane.showMessageDialog(null, "Imóvel não encontrado");
            } else {
                modelList.addElement(symptons.toString());
                
            }
        } else {
            List<Symptom> symptom = listSymptons.getLista();
            for (Symptom symptom1 : symptom) {
                modelList.addElement(symptom1.toString());
            }
        }
        
        jListSymptom.setModel(modelList);
    }
    
    
    private void jButtonInsertDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertDiagnosisActionPerformed
        // TODO add your handling code here:
        String name;
        
        if(jTextFieldNameSymptom.getText().trim()==""){
             JOptionPane.showMessageDialog(null, "Writing all itens!");
        }else{
            name = jTextFieldNameSymptom.getText();
            
            Symptom symptom = new Symptom(name);
            listSymptons.insert(symptom);
            listSymptons.writeFile();
            listar(0, false);
            
        
        }
        
    }//GEN-LAST:event_jButtonInsertDiagnosisActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new DashboardProvisional().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonRemoveDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveDiagnosisActionPerformed
        // TODO add your handling code here:
        String codig = (String) jListSymptom.getSelectedValue();
        int auxx = pegaCodigo(codig);
        listSymptons.delete(auxx);
        listar(0, false);
    }//GEN-LAST:event_jButtonRemoveDiagnosisActionPerformed

    private void jListSymptomValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListSymptomValueChanged
        // TODO add your handling code here:
        
        if(jListSymptom.isSelectionEmpty()){
            jButtonRemoveDiagnosis.setEnabled(false);
        }else{
            jButtonRemoveDiagnosis.setEnabled(true);
        }
    }//GEN-LAST:event_jListSymptomValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    public int pegaCodigo(String codig) {
        int end = 0;
        for (int i = 0; i < codig.length(); i++) {
            if (codig.charAt(i) == '-') {
                end = i - 1;
                break;
            }
        }
        codig = codig.substring(0, end);
        return Integer.parseInt(codig);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSymptom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSymptom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSymptom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSymptom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewSymptom(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonInsertDiagnosis;
    private javax.swing.JButton jButtonNewDiagnosis;
    private javax.swing.JButton jButtonRemoveDiagnosis;
    private javax.swing.JComboBox jComboBoxDiagnosis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListSymptom;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNameSymptom;
    // End of variables declaration//GEN-END:variables
}
